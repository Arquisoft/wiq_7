name: Deploy on release

on:
  release:
    types: [published]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      # Copiar errors, middleware y utils a cada servicio si es necesario
      - run: cp -R utils/ users/authservice/
      - run: cp -R errors/ questionservice/
      - run: cp -R middleware/ questionservice/
      - run: cp -R utils/ questionservice/
      #- run: cp -R errors/ statservice/
      - run: cp -R middleware/ statservice/
      #- run: cp -R utils/ statservice/
      # Instalar dependencias
      - run: npm --prefix users/authservice ci
      - run: npm --prefix users/userservice ci
      - run: npm --prefix questionservice ci
      - run: npm --prefix statservice ci
      - run: npm --prefix gatewayservice ci
      - run: npm --prefix webapp ci
      # Ejecutar tests
      - run: npm --prefix users/authservice test -- --coverage
      - run: npm --prefix users/userservice test -- --coverage
      - run: npm --prefix questionservice test -- --coverage
      - run: npm --prefix statservice test -- --coverage
      - run: npm --prefix gatewayservice test -- --coverage
      - run: npm --prefix webapp test -- --coverage
      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  e2e-tests:
    needs: [unit-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      # Copiar errors, middleware y utils a cada servicio si es necesario
      - run: cp -R utils/ users/authservice/
      - run: cp -R errors/ questionservice/
      - run: cp -R middleware/ questionservice/
      - run: cp -R utils/ questionservice/
      #- run: cp -R errors/ statservice/
      - run: cp -R middleware/ statservice/
      #- run: cp -R utils/ statservice/
      # Instalar dependencias
      - run: npm --prefix users/authservice install
      - run: npm --prefix users/userservice install
      - run: npm --prefix gatewayservice install
      - run: npm --prefix webapp install
      - run: npm --prefix webapp run build
        env:
          CI: false
      - run: npm --prefix webapp run test:e2e
        env:
          CI: false
  docker-push-webapp:
    name: Push webapp Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        env:
          API_URI: http://${{ secrets.DEPLOY_HOST }}:8000
        with:
          name: arquisoft/wiq_7/webapp
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: webapp
          buildargs: API_URI
  docker-push-authservice:
    name: Push auth service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: arquisoft/wiq_7/authservice
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: users/authservice
  docker-push-userservice:
    name: Push user service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: arquisoft/wiq_7/userservice
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: users/userservice
  docker-push-questionservice:
    name: Push question service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: arquisoft/wiq_7/questionservice
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: questionservice
  docker-push-statservice:
    name: Push stat service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: arquisoft/wiq_7/statservice
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: statservice
  docker-push-gatewayservice:
    name: Push gateway service Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [e2e-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Update OpenAPI configuration
        run: |
          DEPLOY_HOST=${{ secrets.DEPLOY_HOST }}
          sed -i "s/SOMEIP/${DEPLOY_HOST}/g" gatewayservice/openapi.yaml
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: arquisoft/wiq_7/gatewayservice
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          workdir: gatewayservice
  deploy:
    name: Deploy over SSH
    runs-on: ubuntu-latest
    needs:
      [
        docker-push-userservice,
        docker-push-authservice,
        docker-push-questionservice,
        docker-push-statservice,
        docker-push-gatewayservice,
        docker-push-webapp,
      ]
    steps:
      - name: Deploy over SSH
        env:
          ORIGIN_URL: ${{ env.ORIGIN_URL }}
          AUTH_SERVICE_URL: ${{ env.AUTH_SERVICE_URL }}
          USER_SERVICE_URL: ${{ env.USER_SERVICE_URL }}
          QUESTION_SERVICE_URL: ${{ env.QUESTION_SERVICE_URL }}
          STAT_SERVICE_URL: ${{ env.STAT_SERVICE_URL }}
        uses: fifsky/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          user: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          command: |
            wget https://raw.githubusercontent.com/arquisoft/wiq_7/master/docker-compose.yml -O docker-compose.yml
            echo "ORIGIN_URL=${{ env.ORIGIN_URL }}" >> .env
            echo "AUTH_SERVICE_URL=${{ env.AUTH_SERVICE_URL }}" >> .env
            echo "USER_SERVICE_URL=${{ env.USER_SERVICE_URL }}" >> .env
            echo "QUESTION_SERVICE_URL=${{ env.QUESTION_SERVICE_URL }}" >> .env
            echo "STAT_SERVICE_URL=${{ env.STAT_SERVICE_URL }}" >> .env
            docker compose --profile prod down
            docker compose --profile prod up -d --pull always
